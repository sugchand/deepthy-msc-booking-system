// *******************************************************
// * Created by Deepthy Vazhelil
// *
// * Copyright (c) 2022 Opensource Licence
// *******************************************************

syntax = "proto3";
option go_package ="bookingSystem/proto/userProto";
package bookingSystem.proto.userProto;

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

message UserRequest {
    // contain only alphabets, numbers or underscore,
    // start with a letter, and must be 8 - 30 characters
    string username = 1;
    //Password must contain at-least one uppercase letter, 
    // one lowercase letter, one digit ,one special character
    // and must be 8-64 characters
    string password = 2;
}

message UserToken {
    string username = 1; //username for the specific token.
    // a valid token that is being used for user authentication.
    // a token is valid for specific validity duration.
    string token = 2;
    google.protobuf.Duration validity = 3;
    bool is_admin = 4;
}


message UserDetails {
    // email address that used for user account.
    // email can be used for reset the password for the user.
    string email = 1;
    bool is_admin = 2;
}

message UserWithDetails {
    UserRequest request = 1;
    UserDetails details = 2;
}

message ResetPwdRequest {
    string username = 1;
    string email = 2;
}

message ResetToken {
    string token = 1;
}

message ResetPwdMessage {
    string token = 1;
    string new_pwd = 2;
}

service UserAuth {
    rpc NewUser(UserWithDetails) returns (google.protobuf.Empty);
    rpc DelUser(UserRequest) returns (google.protobuf.Empty);
    rpc GetUserToken(UserRequest) returns (UserToken);
    // function to check if the current token is valid , the api will respond 
    // the token with the session time.
    rpc IsTokenValid(UserToken) returns (UserToken);
    rpc RequestUserPasswordUpdate(ResetPwdRequest) returns (ResetToken);
    rpc UserPasswordUpdate(ResetPwdMessage) returns (google.protobuf.Empty);
}

