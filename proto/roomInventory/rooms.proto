// *******************************************************
// * Created by Deepthy Vazhelil
// *
// * Copyright (c) 2022 Opensource Licence
// *******************************************************

syntax = "proto3";
option go_package = "bookingSystem/proto/roomInventory";
package bookingSystem.proto.roomInventory;

import "proto/userProto/user.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

message RoomType {
    enum model {
        unknown = 0;
        single = 1;
        single_bed_double = 2;
        twin_bed_double = 3;
        deluxe_double = 4;
        deluxe_king = 5;
        family_room = 6;

    }
    model room_model = 1;
}

message Room {
    // the number of room. it must be unique across the system
    uint64 number = 1;
    // description of room, such as floor, buidling and etc
    string description = 2;
    RoomType kind = 3;
    double price = 4;
    // TODO :: extend the room with additional information if required.
}

message RoomWithUserToken {
    userProto.UserToken token = 1;
    Room room = 2;
}

message RoomNumberWithUserToken {
    userProto.UserToken token = 1;
    uint64 room_number = 2;
}

message RoomTypeWithUserTokenInTimePeriod {
    userProto.UserToken token = 1;
    RoomType model = 2;
    google.protobuf.Timestamp date_in = 3;
    google.protobuf.Timestamp date_out = 4;
}

message RoomList {
    repeated uint64 room_number = 1;
}

message RoomNumberWithUserTokenInTimePeriod {
    // Used to book the room for a given time period.
    userProto.UserToken token = 1;
    uint64 room_number = 2;
    double price = 3;
    google.protobuf.Timestamp date_in = 4;
    google.protobuf.Timestamp date_out = 5;
}

message RoomCheckInCheckout {
    userProto.UserToken token = 1;
    string uname = 2;
    uint64 room_number = 3;
    google.protobuf.Timestamp date_in = 4;
    google.protobuf.Timestamp date_out = 5;
}

service roomInventory {
    rpc NewRoom(RoomWithUserToken) returns (google.protobuf.Empty);
    rpc RemoveRoom(RoomNumberWithUserToken) returns (google.protobuf.Empty);
    rpc RoomsOfType(RoomTypeWithUserTokenInTimePeriod) returns (RoomList);
    rpc ReserveRoom(RoomNumberWithUserTokenInTimePeriod) returns (google.protobuf.Empty);
    rpc CancelRoomReserve(RoomNumberWithUserTokenInTimePeriod) returns (google.protobuf.Empty);
    rpc RoomCheckIn(RoomCheckInCheckout) returns (google.protobuf.Empty);
    rpc RoomCheckOut(RoomCheckInCheckout) returns (google.protobuf.Empty);
}